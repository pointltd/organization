services:
  nginx:
    image: nginx
    container_name: organization-point-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www
      - ./infrastructure/docker/nginx:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      point:
        aliases:
          - organization.point.localhost
  app:
    image: organization-app
    build:
      context: .
      dockerfile: ./infrastructure/docker/app/Dockerfile
      target: dev
    container_name: organization-point-api
    restart: unless-stopped
    working_dir: /var/www/
    env_file:
      - ./infrastructure/docker/app/local.env
    volumes:
      - ./src:/var/www:cached
    depends_on:
      db:
        condition: service_healthy
    networks:
      - point
    develop:
      watch:
        - path: ./src
          action: rebuild
  db:
    image: postgres:latest
    container_name: organization-point-db
    volumes:
      - ./infrastructure/docker/database/data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: organization_user
      POSTGRES_PASSWORD: organization_password
      POSTGRES_DB: point_organization
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U organization_user -d point_organization"  ]
      timeout: 20s
      retries: 10
    networks:
      point:
        aliases:
          - organization-point-db

networks:
  point:
    external: true
